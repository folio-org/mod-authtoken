openapi: 3.0.0
info:
  title: mod-authtoken API
  version: v1
paths:
  # NOTE This module relies on its folio-vertx-lib dependency to handle the /_/tenant
  # route. Please see its yaml specification for /_/tenant here:
  # https://dev.folio.org/reference/api/#folio-vertx-lib
  /token:
    parameters:
      # folio-vertx-lib has header files but they don't make the headers required so we override
      # that behavior here since these two headers are required.
      - $ref: headers/okapi-tenant-required.yaml
      - $ref: headers/okapi-url-required.yaml
    post:
      description: Returns a signed, non-expiring legacy access token.
      operationId: token-legacy
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/signTokenPayload"
        required: true
      responses:
        "201":
          description: Created and signed token successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tokenResponseLegacy"
        "400":
          $ref: "#/components/responses/trait_400"
        "500":
          $ref: "#/components/responses/trait_500"
  /refreshtoken:
    parameters:
      - $ref: headers/okapi-tenant-required.yaml
      - $ref: headers/okapi-url-required.yaml
    post:
      description: |
        Returns a signed, expiring refresh token. This is a legacy endpoint and should not be
        called by new code and will soon be fully depreciated.
      operationId: token-sign-legacy
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/signRefreshToken"
        required: true
      responses:
        "201":
          description: Created and signed token successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/token"
        "400":
          $ref: "#/components/responses/trait_400"
        "500":
          $ref: "#/components/responses/trait_500"
  /token/sign:
    parameters:
      # folio-vertx-lib has header files but they don't make the headers required so we override
      # that behavior here since these two headers are required.
      - $ref: headers/okapi-tenant-required.yaml
      - $ref: headers/okapi-url-required.yaml
    post:
      description: |
        Returns a signed, expiring access token and refresh token. Also returns the expiration
        of each token in the body of the response. The access token time to live is 10 minutes and
        the refresh token is one week.
      operationId: token-sign
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/signTokenPayload"
        required: true
      responses:
        "201":
          description: Created and signed tokens successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tokenResponse"
        "400":
          $ref: "#/components/responses/trait_400"
        "500":
          $ref: "#/components/responses/trait_500"
  /token/refresh:
    parameters:
      - $ref: headers/okapi-tenant-required.yaml
      - $ref: headers/okapi-url-required.yaml
    post:
      description: |
        Returns a new refresh token and a new access token. Also returns the expiration of each token
        in the body of the response. Time to live is 10 minutes for the access token and one week for
        the refresh token.
      operationId: token-refresh
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/refreshToken"
        required: true
      responses:
        "201":
          description: Refreshed tokens successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tokenResponse"
        "400":
          $ref: "#/components/responses/trait_400"
        "500":
          $ref: "#/components/responses/trait_500"
  /token/invalidate:
    parameters:
      - $ref: headers/okapi-tenant-required.yaml
      - $ref: headers/okapi-url-required.yaml
    post:
      description: Invalidate a single token
      operationId: token-invalidate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/refreshToken"
        required: true
      responses:
        "204":
          description: Invalidated token successfully
        "400":
          $ref: "#/components/responses/trait_400"
        "500":
          $ref: "#/components/responses/trait_500"
  /token/invalidate-all:
    parameters:
      - $ref: headers/okapi-tenant-required.yaml
      - $ref: headers/okapi-url-required.yaml
    post:
      description: Invalidate all tokens for a user
      operationId: token-invalidate-all
      responses:
        "204":
          description: Invalidated tokens successfully
        "400":
          $ref: "#/components/responses/trait_400"
        "500":
          $ref: "#/components/responses/trait_500"
  /token/api:
    parameters:
      - $ref: headers/okapi-tenant-required.yaml
      - $ref: headers/okapi-url-required.yaml
    post:
      description: |
        Creates and saves a new api token for the current authenticated user and returns it in
        the body of the response.
      operationId: token-api-create
      responses:
        "201":
          description: Created a new api token successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tokenResponse"
        "400":
          $ref: "#/components/responses/trait_400"
        "500":
          $ref: "#/components/responses/trait_500"
    get:
      description: |
        Returns a list of api token token ids for the current authenticated user if there are any.
      operationId: token-api-list
      responses:
        "201":
          description: Retrieved a list of API tokens successfully. Can be empty if there are none.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tokenIds"
        "400":
          $ref: "#/components/responses/trait_400"
        "500":
          $ref: "#/components/responses/trait_500"
  /token/access:
    parameters:
      - $ref: headers/okapi-tenant-required.yaml
      - $ref: headers/okapi-url-required.yaml
    post:
      description: |
        Creates and returns an new expiring access token if the provided API token is valid.
      operationId: token-api-access
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/apiToken"
        required: true
      responses:
        "201":
          description: |
            A new access token has been created based on the provided API token. This is included
            in the response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/tokenResponse"
        "400":
          $ref: "#/components/responses/trait_400"
        "500":
          $ref: "#/components/responses/trait_500"
  /token/revoke:
    parameters:
      - $ref: headers/okapi-tenant-required.yaml
      - $ref: headers/okapi-url-required.yaml
    post:
      description: |
        Revokes the API token associated with the provided API token identifier
      operationId: token-api-revoke
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/apiTokenId"
        required: true
      responses:
        "201":
          description: The API token associated with the provided API token id has been successfully revoked
        "400":
          $ref: "#/components/responses/trait_400"
        "500":
          $ref: "#/components/responses/trait_500"
components:
  responses:
    trait_400:
      description: Bad request
      content:
        text/plain:
          schema:
            type: string
            example: Invalid JSON in request
        application/json:
          schema:
            type: object
            example: { "error": "Invalid JSON in request" }
    trait_500:
      description: Internal error
      content:
        text/plain:
          schema:
            type: string
            example: Internal server error, contact administrator
  schemas:
    refreshToken:
      $ref: schemas/refreshToken.json
    tokenResponse:
      $ref: schemas/tokenResponse.json
    tokenResponseLegacy:
      $ref: schemas/tokenResponseLegacy.json
    signTokenPayload:
      $ref: schemas/signTokenPayload.json
    signRefreshToken:
      $ref: schemas/signRefreshToken.json
    token:
      $ref: schemas/token.json
    tokenIds:
      $ref: schemas/tokenIds.json
    apiTokenId:
      $ref: schemas/apiTokenId.json
    apiToken:
      $ref: schemas/apiToken.json
